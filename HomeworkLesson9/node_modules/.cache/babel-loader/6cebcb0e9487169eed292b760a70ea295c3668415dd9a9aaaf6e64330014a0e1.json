{"ast":null,"code":"var _jsxFileName = \"/home/julypjulius/Homeworklesson9/ethers-js/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [text, setText] = useState(\"\");\n  let [savedText, setSavedText] = useState(\"\");\n  let [connected, setConnected] = useState(false);\n  let {\n    ethereum\n  } = window;\n  let contract = null;\n  if (ethereum) {\n    let abi = [\"function changeText(string)\", \"function text() view returns (string)\"];\n    let address = \"0x1C3dd5c848102ac51E1c47434a00eFbEd1F177C4\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    let signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && !connected) {\n          ethereum.request({\n            method: 'eth_requestAccounts'\n          }).then(accounts => {\n            setConnected(true);\n          });\n        }\n      },\n      children: !connected ? 'Connect wallet' : 'Connected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (contract && connected) {\n          contract.changeText(text).then(() => {\n            setText(\"\");\n          });\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter text\",\n        onChange: e => setText(e.currentTarget.value),\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Change text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.text().then(text => {\n            setSavedText(text);\n          });\n        }\n      },\n      children: \"Get text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: savedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dR3Xq+mf3qshyllhQG5rCNC9gS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","jsxDEV","_jsxDEV","App","_s","text","setText","savedText","setSavedText","connected","setConnected","ethereum","window","contract","abi","address","provider","providers","Web3Provider","signer","getSigner","Contract","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","request","method","then","accounts","onSubmit","e","preventDefault","changeText","type","placeholder","onChange","currentTarget","value","_c","$RefreshReg$"],"sources":["/home/julypjulius/Homeworklesson9/ethers-js/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n \nfunction App() {\n  let [text, setText] = useState(\"\");\n  let [savedText, setSavedText] = useState(\"\");\n  let [connected, setConnected] = useState(false);\n \n  let { ethereum } = window;\n  let contract = null;\n \n  if (ethereum) {\n \n    let abi = [\n      \"function changeText(string)\",\n      \"function text() view returns (string)\"\n    ]\n    let address = \"0x1C3dd5c848102ac51E1c47434a00eFbEd1F177C4\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    let signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n  }\n \n  return (\n    <div className=\"App\">\n      <h1>Text Contract</h1>\n \n      <button onClick={() => {\n          if (contract && !connected) {\n              ethereum.request({ method: 'eth_requestAccounts'})\n                  .then(accounts => {\n                      setConnected(true);\n                  })\n          }\n      }}>{!connected ? 'Connect wallet' : 'Connected' }</button>\n \n      <form onSubmit={(e) => {\n        e.preventDefault();\n        if (contract && connected) {\n          contract.changeText(text)\n            .then(() => {\n              setText(\"\");\n            });\n        }\n      }}>\n          <input type=\"text\" placeholder=\"Enter text\" onChange={e => setText(e.currentTarget.value)} value={text} />\n          <input type=\"submit\" value=\"Change text\" />\n      </form>\n \n      <button onClick={() => {\n        if (contract && connected) {\n          contract.text()\n            .then(text => {\n              setSavedText(text);\n            })\n        }\n      }}>Get text</button>\n \n      <h3>{savedText}</h3>\n    </div>\n  );\n}\n \nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}