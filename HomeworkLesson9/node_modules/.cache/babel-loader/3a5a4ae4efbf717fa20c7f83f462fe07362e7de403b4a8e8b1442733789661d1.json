{"ast":null,"code":"var _jsxFileName = \"/home/julypjulius/Homeworklesson9/ethers-js/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //storing different states\n\n  //let [text, setText] = useState(\"\");\n  //let [savedText, setSavedText] = useState(\"\");\n\n  let [connected, setConnected] = useState(false);\n  const [CoinName, setCoinName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [decimals, setDecimals] = useState(\"\");\n  const [totalSupply, setTotalSupply] = useState(\"\");\n\n  //web3 interface for interacting with ethereum smart contracts\n  let {\n    ethereum\n  } = window;\n  let contract = null;\n  if (ethereum) {\n    let abi = [\"function name() public view returns (string memory)\", \"function symbol() public view returns (string memory)\", \"function decimals() public view returns (uint8)\", \"function totalSupply() public view returns (uint256)\"];\n    let address = \"0x36acd8fa9eb4a86185f2c0a2483e24a5e93b5159\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    let signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"A Contract for Badger Coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && !connected) {\n          ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(accounts => {\n            setConnected(true);\n          });\n        }\n      },\n      children: !connected ? \"Connect wallet\" : \"Connected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contract Functions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.name().then(contractName => {\n            setCoinName(contractName);\n          });\n        }\n      },\n      children: \"Get the name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: CoinName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.symbol().then(sym => {\n            setSymbol(sym);\n          });\n        }\n      },\n      children: \"Get the symbol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.decimals().then(dec => {\n            setDecimals(dec);\n          });\n        }\n      },\n      children: \"Get the decimals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.totalSupply().then(supply => {\n            setTotalSupply(Number(supply));\n          });\n        }\n      },\n      children: \"Get the total supply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: totalSupply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZJbM3EqvAusPKKRatN9IXdASNkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","jsxDEV","_jsxDEV","App","_s","connected","setConnected","CoinName","setCoinName","symbol","setSymbol","decimals","setDecimals","totalSupply","setTotalSupply","ethereum","window","contract","abi","address","provider","providers","Web3Provider","signer","getSigner","Contract","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","request","method","then","accounts","name","contractName","sym","dec","supply","Number","_c","$RefreshReg$"],"sources":["/home/julypjulius/Homeworklesson9/ethers-js/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\n\nfunction App() {\n\n  //storing different states\n\n  //let [text, setText] = useState(\"\");\n  //let [savedText, setSavedText] = useState(\"\");\n\n  let [connected, setConnected] = useState(false);\n  const [CoinName, setCoinName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [decimals, setDecimals] = useState(\"\");\n  const [totalSupply, setTotalSupply] = useState(\"\");\n\n\n  //web3 interface for interacting with ethereum smart contracts\n  let { ethereum } = window\n  let contract = null;\n\n\n  if (ethereum) {\n    let abi = [\n      \"function name() public view returns (string memory)\",\n      \"function symbol() public view returns (string memory)\",\n      \"function decimals() public view returns (uint8)\",\n      \"function totalSupply() public view returns (uint256)\",\n    ];\n\n    let address = \"0x36acd8fa9eb4a86185f2c0a2483e24a5e93b5159\";\n    let provider = new ethers.providers.Web3Provider(ethereum);\n    let signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1>A Contract for Badger Coin</h1>\n\n      <button\n        onClick={() => {\n          if (contract && !connected) {\n            ethereum\n              .request({ method: \"eth_requestAccounts\" })\n              .then((accounts) => {\n                setConnected(true);\n              });\n          }\n        }}\n      >\n        {!connected ? \"Connect wallet\" : \"Connected\"}\n        </button>\n        <h2>Contract Functions</h2>\n        <button \n        onClick={() => {\n          if (contract && connected){\n            contract.name().then((contractName) => {\n              setCoinName(contractName);\n            });\n          }\n        }}\n        >\n          Get the name\n          \n        </button>\n        <h3>{CoinName}</h3>\n\n        <button\n        onClick={() => {\n          if(contract&& connected){\n            contract.symbol().then((sym) => {\n              setSymbol(sym);\n            });\n          }\n        }}\n        >\n          Get the symbol\n        </button>\n        \n        <h2>{ symbol }</h2>\n\n        <button \n        onClick={() => {\n          if ( contract && connected){\n            contract.decimals().then((dec) =>{\n              setDecimals(dec);\n            });\n          }\n        }}\n        >\n          Get the decimals\n        </button>\n\n        <button\n        onClick={() => {\n          if(contract && connected) {\n            contract.totalSupply().then((supply) => {\n              setTotalSupply(Number(supply));\n            });\n          }\n        }}\n        >\n          Get the total supply\n        </button>\n\n        <h3>{totalSupply}</h3>\n        </div>\n        );\n      }\n\n      export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}